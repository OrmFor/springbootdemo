<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jlkj.web.shopnew.dao.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.jlkj.web.shopnew.pojo.Address" extends="associationMap">
	<id column="id" property="id" />
	<result column="uid" property="uid" />
	<result column="consignee" property="consignee" />
	<result column="phone" property="phone" />
	<result column="area" property="area" />
	<result column="address" property="address" />
	<result column="create_time" property="createTime" />
	<result column="update_time" property="updateTime" />
	<result column="aggress_id" property="aggressId" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`uid`
		,`consignee`
		,`phone`
		,`area`
		,`address`
		,`create_time`
		,`update_time`
		,`aggress_id`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `address`
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `address`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
	LIMIT 1
  </select>
  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT ${aggregate_sql} FROM `address`
    <include refid="map_params_where_condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM `address`
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.jlkj.web.shopnew.pojo.Address" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `address` (
	  `uid`
	  ,`consignee`
	  ,`phone`
	  ,`area`
	  ,`address`
	  ,`create_time`
	  ,`update_time`
	  ,`aggress_id`
      )
    VALUES (
		  
		  #{uid}
		  ,
		  #{consignee}
		  ,
		  #{phone}
		  ,
		  #{area}
		  ,
		  #{address}
		  ,
		  #{createTime}
		  ,
		  #{updateTime}
		  ,
		  #{aggressId}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jlkj.web.shopnew.pojo.Address" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `address`
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="uid != null" >
			`uid`,
		  </if>
		  <if test="consignee != null" >
			`consignee`,
		  </if>
		  <if test="phone != null" >
			`phone`,
		  </if>
		  <if test="area != null" >
			`area`,
		  </if>
		  <if test="address != null" >
			`address`,
		  </if>
		  <if test="createTime != null" >
			`create_time`,
		  </if>
		  <if test="updateTime != null" >
			`update_time`,
		  </if>
		  <if test="aggressId != null" >
			`aggress_id`,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="uid != null" >
			#{uid},
		  </if>
		  <if test="consignee != null" >
			#{consignee},
		  </if>
		  <if test="phone != null" >
			#{phone},
		  </if>
		  <if test="area != null" >
			#{area},
		  </if>
		  <if test="address != null" >
			#{address},
		  </if>
		  <if test="createTime != null" >
			#{createTime},
		  </if>
		  <if test="updateTime != null" >
			#{updateTime},
		  </if>
		  <if test="aggressId != null" >
			#{aggressId},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlkj.web.shopnew.pojo.Address" >
    UPDATE `address`
    <set >
	  <if test="uid != null" >
        `uid` = #{uid},
      </if>
	  <if test="consignee != null" >
        `consignee` = #{consignee},
      </if>
	  <if test="phone != null" >
        `phone` = #{phone},
      </if>
	  <if test="area != null" >
        `area` = #{area},
      </if>
	  <if test="address != null" >
        `address` = #{address},
      </if>
	  <if test="createTime != null" >
        `create_time` = #{createTime},
      </if>
	  <if test="updateTime != null" >
        `update_time` = #{updateTime},
      </if>
	  <if test="aggressId != null" >
        `aggress_id` = #{aggressId},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlkj.web.shopnew.pojo.Address" >
	UPDATE `address` SET
        `uid` = #{uid},
        `consignee` = #{consignee},
        `phone` = #{phone},
        `area` = #{area},
        `address` = #{address},
        `create_time` = #{createTime},
        `update_time` = #{updateTime},
        `aggress_id` = #{aggressId}
    WHERE `id` = #{id}
  </update>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE `address`
    <set>
	  <if test="entity.uid != null" >
        `uid` = #{entity.uid},
      </if>
	  <if test="entity.consignee != null" >
        `consignee` = #{entity.consignee},
      </if>
	  <if test="entity.phone != null" >
        `phone` = #{entity.phone},
      </if>
	  <if test="entity.area != null" >
        `area` = #{entity.area},
      </if>
	  <if test="entity.address != null" >
        `address` = #{entity.address},
      </if>
	  <if test="entity.createTime != null" >
        `create_time` = #{entity.createTime},
      </if>
	  <if test="entity.updateTime != null" >
        `update_time` = #{entity.updateTime},
      </if>
	  <if test="entity.aggressId != null" >
        `aggress_id` = #{entity.aggressId},
      </if>
      <foreach collection="entity.nullColums" item="nullColum">
        `${nullColum}` = NULL,
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <update id="updateIncreateNumbers" parameterType="java.util.Map" >
    UPDATE `address`
    <set>
      <foreach collection="increateNumbers" item="numberCloums">
        `${numberCloums.column}` = `${numberCloums.column}` + #{numberCloums.number},
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="uid != null" >
        AND `uid` = #{uid}
	  </if>
	  <if test="consignee != null" >
        AND `consignee` = #{consignee}
	  </if>
	  <if test="phone != null" >
        AND `phone` = #{phone}
	  </if>
	  <if test="area != null" >
        AND `area` = #{area}
	  </if>
	  <if test="address != null" >
        AND `address` = #{address}
	  </if>
	  <if test="createTime != null" >
        AND `create_time` = #{createTime}
	  </if>
	  <if test="updateTime != null" >
        AND `update_time` = #{updateTime}
	  </if>
	  <if test="aggressId != null" >
        AND `aggress_id` = #{aggressId}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.uid != null" >
        AND `uid` = #{condition.uid}
	  </if>
	  <if test="condition.consignee != null" >
        AND `consignee` = #{condition.consignee}
	  </if>
	  <if test="condition.phone != null" >
        AND `phone` = #{condition.phone}
	  </if>
	  <if test="condition.area != null" >
        AND `area` = #{condition.area}
	  </if>
	  <if test="condition.address != null" >
        AND `address` = #{condition.address}
	  </if>
	  <if test="condition.createTime != null" >
        AND `create_time` = #{condition.createTime}
	  </if>
	  <if test="condition.updateTime != null" >
        AND `update_time` = #{condition.updateTime}
	  </if>
	  <if test="condition.aggressId != null" >
        AND `aggress_id` = #{condition.aggressId}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <if test="expressionChainList != null and !expressionChainList.empty">
        AND
        <foreach collection="expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <include refid="map_params_where_condition_ext" />
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM `address`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM `address`
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(1)
    FROM `address`
    <include refid="map_params_where_condition" />
  </select>
</mapper>