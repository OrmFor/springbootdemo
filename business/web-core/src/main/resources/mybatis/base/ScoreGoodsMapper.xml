<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jlkj.web.shopnew.dao.ScoreGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.jlkj.web.shopnew.pojo.ScoreGoods" extends="associationMap">
	<id column="id" property="id" />
	<result column="goods_id" property="goodsId" />
	<result column="goods_name" property="goodsName" />
	<result column="qr_img_path" property="qrImgPath" />
	<result column="score" property="score" />
	<result column="costPrice" property="costPrice" />
	<result column="goods_current_price" property="goodsCurrentPrice" />
	<result column="self_price" property="selfPrice" />
	<result column="sales_count" property="salesCount" />
	<result column="goods_status" property="goodsStatus" />
	<result column="result" property="result" />
	<result column="create_time" property="createTime" />
	<result column="update_time" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`goods_id`
		,`goods_name`
		,`qr_img_path`
		,`score`
		,`costPrice`
		,`goods_current_price`
		,`self_price`
		,`sales_count`
		,`goods_status`
		,`result`
		,`create_time`
		,`update_time`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `score_goods`
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `score_goods`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
	LIMIT 1
  </select>
  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT ${aggregate_sql} FROM `score_goods`
    <include refid="map_params_where_condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM `score_goods`
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.jlkj.web.shopnew.pojo.ScoreGoods" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `score_goods` (
	  `goods_id`
	  ,`goods_name`
	  ,`qr_img_path`
	  ,`score`
	  ,`costPrice`
	  ,`goods_current_price`
	  ,`self_price`
	  ,`sales_count`
	  ,`goods_status`
	  ,`result`
	  ,`create_time`
	  ,`update_time`
      )
    VALUES (
		  
		  #{goodsId}
		  ,
		  #{goodsName}
		  ,
		  #{qrImgPath}
		  ,
		  #{score}
		  ,
		  #{costPrice}
		  ,
		  #{goodsCurrentPrice}
		  ,
		  #{selfPrice}
		  ,
		  #{salesCount}
		  ,
		  #{goodsStatus}
		  ,
		  #{result}
		  ,
		  <if test="createTime != null" >
			#{createTime}
      </if>
      <if test="createTime == null" >
      NOW()
		  </if>
		  ,
		  <if test="updateTime != null" >
			#{updateTime}
      </if>
      <if test="updateTime == null" >
      NOW()
		  </if>
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jlkj.web.shopnew.pojo.ScoreGoods" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `score_goods`
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="goodsId != null" >
			`goods_id`,
		  </if>
		  <if test="goodsName != null" >
			`goods_name`,
		  </if>
		  <if test="qrImgPath != null" >
			`qr_img_path`,
		  </if>
		  <if test="score != null" >
			`score`,
		  </if>
		  <if test="costPrice != null" >
			`costPrice`,
		  </if>
		  <if test="goodsCurrentPrice != null" >
			`goods_current_price`,
		  </if>
		  <if test="selfPrice != null" >
			`self_price`,
		  </if>
		  <if test="salesCount != null" >
			`sales_count`,
		  </if>
		  <if test="goodsStatus != null" >
			`goods_status`,
		  </if>
		  <if test="result != null" >
			`result`,
		  </if>
			`create_time`,
			`update_time`,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="goodsId != null" >
			#{goodsId},
		  </if>
		  <if test="goodsName != null" >
			#{goodsName},
		  </if>
		  <if test="qrImgPath != null" >
			#{qrImgPath},
		  </if>
		  <if test="score != null" >
			#{score},
		  </if>
		  <if test="costPrice != null" >
			#{costPrice},
		  </if>
		  <if test="goodsCurrentPrice != null" >
			#{goodsCurrentPrice},
		  </if>
		  <if test="selfPrice != null" >
			#{selfPrice},
		  </if>
		  <if test="salesCount != null" >
			#{salesCount},
		  </if>
		  <if test="goodsStatus != null" >
			#{goodsStatus},
		  </if>
		  <if test="result != null" >
			#{result},
		  </if>
		  <if test="createTime != null" >
			#{createTime},
      </if>
      <if test="createTime == null" >
      NOW(),
		  </if>
		  <if test="updateTime != null" >
			#{updateTime},
      </if>
      <if test="updateTime == null" >
      NOW(),
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlkj.web.shopnew.pojo.ScoreGoods" >
    UPDATE `score_goods`
    <set >
	  <if test="goodsId != null" >
        `goods_id` = #{goodsId},
      </if>
	  <if test="goodsName != null" >
        `goods_name` = #{goodsName},
      </if>
	  <if test="qrImgPath != null" >
        `qr_img_path` = #{qrImgPath},
      </if>
	  <if test="score != null" >
        `score` = #{score},
      </if>
	  <if test="costPrice != null" >
        `costPrice` = #{costPrice},
      </if>
	  <if test="goodsCurrentPrice != null" >
        `goods_current_price` = #{goodsCurrentPrice},
      </if>
	  <if test="selfPrice != null" >
        `self_price` = #{selfPrice},
      </if>
	  <if test="salesCount != null" >
        `sales_count` = #{salesCount},
      </if>
	  <if test="goodsStatus != null" >
        `goods_status` = #{goodsStatus},
      </if>
	  <if test="result != null" >
        `result` = #{result},
      </if>
	  <if test="createTime != null" >
        `create_time` = #{createTime},
      </if>
	  <if test="updateTime != null" >
        `update_time` = #{updateTime},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlkj.web.shopnew.pojo.ScoreGoods" >
	UPDATE `score_goods` SET
        `goods_id` = #{goodsId},
        `goods_name` = #{goodsName},
        `qr_img_path` = #{qrImgPath},
        `score` = #{score},
        `costPrice` = #{costPrice},
        `goods_current_price` = #{goodsCurrentPrice},
        `self_price` = #{selfPrice},
        `sales_count` = #{salesCount},
        `goods_status` = #{goodsStatus},
        `result` = #{result},
        `create_time` = #{createTime},
        `update_time` = #{updateTime}
    WHERE `id` = #{id}
  </update>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE `score_goods`
    <set>
	  <if test="entity.goodsId != null" >
        `goods_id` = #{entity.goodsId},
      </if>
	  <if test="entity.goodsName != null" >
        `goods_name` = #{entity.goodsName},
      </if>
	  <if test="entity.qrImgPath != null" >
        `qr_img_path` = #{entity.qrImgPath},
      </if>
	  <if test="entity.score != null" >
        `score` = #{entity.score},
      </if>
	  <if test="entity.costPrice != null" >
        `costPrice` = #{entity.costPrice},
      </if>
	  <if test="entity.goodsCurrentPrice != null" >
        `goods_current_price` = #{entity.goodsCurrentPrice},
      </if>
	  <if test="entity.selfPrice != null" >
        `self_price` = #{entity.selfPrice},
      </if>
	  <if test="entity.salesCount != null" >
        `sales_count` = #{entity.salesCount},
      </if>
	  <if test="entity.goodsStatus != null" >
        `goods_status` = #{entity.goodsStatus},
      </if>
	  <if test="entity.result != null" >
        `result` = #{entity.result},
      </if>
	  <if test="entity.createTime != null" >
        `create_time` = #{entity.createTime},
      </if>
	  <if test="entity.updateTime != null" >
        `update_time` = #{entity.updateTime},
      </if>
      <foreach collection="entity.nullColums" item="nullColum">
        `${nullColum}` = NULL,
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <update id="updateIncreateNumbers" parameterType="java.util.Map" >
    UPDATE `score_goods`
    <set>
      <foreach collection="increateNumbers" item="numberCloums">
        `${numberCloums.column}` = `${numberCloums.column}` + #{numberCloums.number},
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="goodsId != null" >
        AND `goods_id` = #{goodsId}
	  </if>
	  <if test="goodsName != null" >
        AND `goods_name` = #{goodsName}
	  </if>
	  <if test="qrImgPath != null" >
        AND `qr_img_path` = #{qrImgPath}
	  </if>
	  <if test="score != null" >
        AND `score` = #{score}
	  </if>
	  <if test="costPrice != null" >
        AND `costPrice` = #{costPrice}
	  </if>
	  <if test="goodsCurrentPrice != null" >
        AND `goods_current_price` = #{goodsCurrentPrice}
	  </if>
	  <if test="selfPrice != null" >
        AND `self_price` = #{selfPrice}
	  </if>
	  <if test="salesCount != null" >
        AND `sales_count` = #{salesCount}
	  </if>
	  <if test="goodsStatus != null" >
        AND `goods_status` = #{goodsStatus}
	  </if>
	  <if test="result != null" >
        AND `result` = #{result}
	  </if>
	  <if test="createTime != null" >
        AND `create_time` = #{createTime}
	  </if>
	  <if test="updateTime != null" >
        AND `update_time` = #{updateTime}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.goodsId != null" >
        AND `goods_id` = #{condition.goodsId}
	  </if>
	  <if test="condition.goodsName != null" >
        AND `goods_name` = #{condition.goodsName}
	  </if>
	  <if test="condition.qrImgPath != null" >
        AND `qr_img_path` = #{condition.qrImgPath}
	  </if>
	  <if test="condition.score != null" >
        AND `score` = #{condition.score}
	  </if>
	  <if test="condition.costPrice != null" >
        AND `costPrice` = #{condition.costPrice}
	  </if>
	  <if test="condition.goodsCurrentPrice != null" >
        AND `goods_current_price` = #{condition.goodsCurrentPrice}
	  </if>
	  <if test="condition.selfPrice != null" >
        AND `self_price` = #{condition.selfPrice}
	  </if>
	  <if test="condition.salesCount != null" >
        AND `sales_count` = #{condition.salesCount}
	  </if>
	  <if test="condition.goodsStatus != null" >
        AND `goods_status` = #{condition.goodsStatus}
	  </if>
	  <if test="condition.result != null" >
        AND `result` = #{condition.result}
	  </if>
	  <if test="condition.createTime != null" >
        AND `create_time` = #{condition.createTime}
	  </if>
	  <if test="condition.updateTime != null" >
        AND `update_time` = #{condition.updateTime}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <if test="expressionChainList != null and !expressionChainList.empty">
        AND
        <foreach collection="expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <include refid="map_params_where_condition_ext" />
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM `score_goods`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM `score_goods`
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(1)
    FROM `score_goods`
    <include refid="map_params_where_condition" />
  </select>
</mapper>